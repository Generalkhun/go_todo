{"version":3,"sources":["logo.svg","components/Register.js","components/LoginForm.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Register","useState","username","setUsername","password","setPassword","invalidUsername","setInvalidUsername","nonBlank","setNonBlank","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","event","target","value","console","log","type","Button","onClick","axios","post","endpoint","then","response","window","location","href","error","LoginForm","login","setLogin","wrongPassActivated","setWrongPassActivated","to","withCredentials","Message","floated","path","Tasks","props","task","setTask","item","setItem","open","setOpen","RefreshToken","get","updateTask","responseData","data","slice","indexOf","length","todoArray","JSON","parse","mappedItem","map","status","Card","Content","wordWrap","Meta","Icon","name","completeTask","_id","paddingRight","undoTask","deleteTask","id","put","res","delete","useEffect","inverted","basic","className","Confirm","onCancel","onConfirm","content","Group","itemsPerRow","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,sGC0GAA,MA5Ff,WAAoB,MAEcC,mBAAS,IAFvB,mBAEXC,EAFW,KAEDC,EAFC,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,OAI4BJ,oBAAS,GAJrC,mBAIXK,EAJW,KAIMC,EAJN,OAKcN,oBAAS,GALvB,mBAKXO,EALW,KAKDC,EALC,KA+ClB,OACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAAEC,OAAQ,SACjBC,cAAc,SAHhB,SAKE,eAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAhC,UACE,eAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,OAAOR,UAAU,SAAvC,UACE,cAACS,EAAA,EAAD,CAAOC,IAAI,wHADb,0BAGA,cAACC,EAAA,EAAD,CAAMC,KAAK,QAAX,SACE,eAACC,EAAA,EAAD,CAASC,SAAO,EAAhB,UACE,cAACH,EAAA,EAAKI,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,+BACZC,SA1Dd,SAAiCC,GAC/B7B,EAAY6B,EAAMC,OAAOC,OACR,KAAbhC,GACFO,GAAY,GAEd0B,QAAQC,IAAIlC,MAuDF,cAACoB,EAAA,EAAKI,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,+BACZO,KAAK,WACLN,SA1Dd,SAAiCC,GAC/B3B,EAAY2B,EAAMC,OAAOC,OACR,KAAb9B,GACFK,GAAY,GAEd0B,QAAQC,IAAIhC,MAuDF,8BACGE,GACC,mBAAGM,MAAO,CAAEO,MAAO,OAAnB,SAA6BX,EAAW,kCAAmC,6CAI/E,cAAC8B,EAAA,EAAD,CAAQnB,MAAM,OAAOQ,OAAK,EAACJ,KAAK,QAAQgB,QA1DpD,SAAyBP,GACN,KAAb9B,GAAgC,KAAbE,GAIvB+B,QAAQC,IAAI,mBACZI,IACGC,KAAKC,iCAAwB,CAC5BxC,SAAUA,EACVE,SAAUA,IAEXuC,MACC,SAAUC,GACRT,QAAQC,IAAIQ,GACZT,QAAQC,IAAI,yBACZS,OAAOC,SAASC,KAAO,iBAEzB,SAACC,GACCzC,GAAmB,GACnB4B,QAAQC,IAAIY,OAjBhBzC,GAAmB,IAwDX,mC,wBCuCC0C,MAtHf,WAAqB,MAEahD,mBAAS,IAFtB,mBAEZC,EAFY,KAEFC,EAFE,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIOJ,oBAAS,GAJhB,mBAIZiD,EAJY,KAILC,EAJK,OAKiClD,oBAAS,GAL1C,mBAKZmD,EALY,KAKQC,EALR,KA2CnB,OACE,eAAC,IAAD,WACE,cAAC3C,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAAEC,OAAQ,SACjBC,cAAc,SAHhB,SAKE,eAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAhC,UACE,eAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,OAAOR,UAAU,SAAvC,UACE,cAACS,EAAA,EAAD,CAAOC,IAAI,oGAAqG,IADlH,iCAIA,cAACC,EAAA,EAAD,CAAMC,KAAK,QAAX,SACE,eAACC,EAAA,EAAD,CAASC,SAAO,EAAhB,UACE,cAACH,EAAA,EAAKI,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,UACZC,SAvDd,SAAiCC,GAC/B7B,EAAY6B,EAAMC,OAAOC,OACzBC,QAAQC,IAAIlC,MAuDF,cAACoB,EAAA,EAAKI,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZO,KAAK,WACLN,SA1Dd,SAAiCC,GAC/B3B,EAAY2B,EAAMC,OAAOC,OACzBC,QAAQC,IAAIhC,MA0DF,cAAC,IAAD,CAAMkD,GAAIJ,IAAUE,EAAqB,SAAW,aAApD,SACE,cAACd,EAAA,EAAD,CAAQX,OAAK,EAACJ,KAAK,QAAQgB,QAxDzC,SAAqBP,GACnBG,QAAQC,IAAI,gBACZI,IACGC,KACCC,oCACA,CACExC,SAAUA,EACVE,SAAUA,GAEZ,CACEmD,iBAAiB,IAGpBZ,MACC,SAAUC,GACRO,GAAS,GACTE,GAAsB,GACtBR,OAAOC,SAASC,KAAO,YAEzB,SAACC,GACCK,GAAsB,GACtBlB,QAAQC,IAAIY,OAmCN,SACE,+CAKR,8BACGI,GACC,mBAAGxC,MAAO,CAAEO,MAAO,OAAnB,8CAIJ,eAACqC,EAAA,EAAD,wCAC6B,IAC3B,cAAC,IAAD,CACEF,GAAG,aACHf,QAAS,WACPM,OAAOC,SAASC,KAAO,cAH3B,+BASF,eAACS,EAAA,EAAD,CAASjC,KAAQ,OAAQJ,MAAS,OAAlC,UAEA,eAACqC,EAAA,EAAD,CAASjC,KAAQ,QAASJ,MAAS,QAAnC,iHACwG,mBAAG4B,KAAO,yCAAV,oBADxG,SAGA,cAAC3B,EAAA,EAAD,CAAOG,KAAQ,QAASkC,QAAW,SAAUpC,IAAM,sDAAsD,IACzG,cAACD,EAAA,EAAD,CAAOG,KAAQ,OAAQF,IAAM,sGAC7B,cAACD,EAAA,EAAD,CAAOG,KAAQ,OAAQF,IAAM,oEAAoE,YAMrG,cAAC,IAAD,UACE,cAAC,IAAD,CAAOqC,KAAK,aAAZ,SACE,cAAC,EAAD,Y,mCClHNhB,EAAW,wBA+QAiB,MA7Qf,SAAeC,GAAO,MAEI3D,mBAAS,IAFb,mBAEb4D,EAFa,KAEPC,EAFO,OAGI7D,mBAAS,IAHb,mBAGb8D,EAHa,KAGPC,EAHO,OAIY/D,mBAAS,IAJrB,mBAIbC,EAJa,KAIHC,EAJG,OAKGF,oBAAS,GALZ,mBAKbgE,EALa,KAKRC,EALQ,KAgBpB,SAASC,IACP3B,IACG4B,IAAI1B,EAAW,gBAAiB,CAAEa,iBAAiB,IACnDZ,MAAK,WACJR,QAAQC,IAAI,sBA2ElB,SAASiC,IACPF,IACA3B,IACG4B,IAAI1B,EAAW,iBAAkB,CAAEa,iBAAiB,IACpDZ,MAAK,SAACC,GACL,IAAI0B,EAAe1B,EAAS2B,KAG5BpE,EACEmE,EAAaE,MACXF,EAAaG,QAAQ,KAAO,EAC5BH,EAAaI,OAAS,IAG1BvC,QAAQC,IAAIlC,GACZ,IAAIyE,EAAYL,EAAaE,MAAM,EAAGF,EAAaG,QAAQ,KAAO,GAGlE,GADAE,EAAYC,KAAKC,MAAMF,GACR,CACb,IAAIG,EAAaH,EAAUI,KAAI,SAAChB,GAC9B,IAAI5C,EAAQ,SAIZ,OAHI4C,EAAKiB,SACP7D,EAAQ,SAGR,cAAC8D,EAAA,EAAD,CAAqB9D,MAAOA,EAAOQ,OAAK,EAAxC,SACE,eAACsD,EAAA,EAAKC,QAAN,WACE,cAACD,EAAA,EAAKhE,OAAN,CAAaN,UAAU,OAAvB,SACE,qBAAKC,MAAO,CAAEuE,SAAU,cAAxB,SAAyCpB,EAAKF,SAGhD,eAACoB,EAAA,EAAKG,KAAN,CAAWzE,UAAU,QAArB,UACE,cAAC0E,EAAA,EAAD,CACEC,KAAK,eACLnE,MAAM,QACNoB,QAAS,kBAAMgD,EAAaxB,EAAKyB,QAEnC,sBAAM5E,MAAO,CAAE6E,aAAc,IAA7B,kBACA,cAACJ,EAAA,EAAD,CACEC,KAAK,OACLnE,MAAM,SACNoB,QAAS,kBAAMmD,EAAS3B,EAAKyB,QAE/B,sBAAM5E,MAAO,CAAE6E,aAAc,IAA7B,kBACA,cAACJ,EAAA,EAAD,CACEC,KAAK,SACLnE,MAAM,MACNoB,QAAS,kBAAMoD,EAAW5B,EAAKyB,QAEjC,sBAAM5E,MAAO,CAAE6E,aAAc,IAA7B,2BAxBK1B,EAAKyB,QA8BpBxB,EAAQc,QAERd,EAAQ,OAKhB,SAAS0B,EAASE,GAChBzB,IACA3B,IACGqD,IAAInD,EAAW,kBAAoBkD,EAAI,GAAI,CAAErC,iBAAiB,IAC9DZ,MAAK,SAACmD,GACL3D,QAAQC,IAAI0D,GACZzB,OAIN,SAASkB,EAAaK,GACpBzB,IACAhC,QAAQC,IAAI,gBACZI,IACGqD,IAAInD,EAAW,sBAAwBkD,EAAI,GAAI,CAAErC,iBAAiB,IAClEZ,MAAK,SAACmD,GACL3D,QAAQC,IAAI,gBACZD,QAAQC,IAAI0D,GACZzB,OAIN,SAASsB,EAAWC,GAClBzB,IAEA3B,IACGuD,OAAOrD,EAAW,oBAAsBkD,EAAI,CAAErC,iBAAiB,IAC/DZ,MAAK,SAACmD,GACL3D,QAAQC,IAAI0D,GACZzB,OAqCN,OA9LEF,IACA6B,qBAAU,WACRxD,IACG4B,IAAI1B,EAAW,iBAAkB,CAAEa,iBAAiB,IACpDZ,MAAK,SAACC,GACL,IAAI0B,EAAe1B,EAAS2B,KAE5BpE,EACEmE,EAAaE,MACXF,EAAaG,QAAQ,KAAO,EAC5BH,EAAaI,OAAS,IAG1BvC,QAAQC,IAAIlC,GACZ,IAAIyE,EAAYL,EAAaE,MAAM,EAAGF,EAAaG,QAAQ,KAAO,GAGlE,GADAE,EAAYC,KAAKC,MAAMF,GACR,CACb,IAAIG,EAAaH,EAAUI,KAAI,SAAChB,GAC9B,IAAI5C,EAAQ,SAIZ,OAHI4C,EAAKiB,SACP7D,EAAQ,SAGR,cAAC8D,EAAA,EAAD,CAAqB9D,MAAOA,EAAOQ,OAAK,EAAxC,SACE,eAACsD,EAAA,EAAKC,QAAN,WACE,cAACD,EAAA,EAAKhE,OAAN,CAAaN,UAAU,OAAvB,SACE,qBAAKC,MAAO,CAAEuE,SAAU,cAAxB,SAAyCpB,EAAKF,SAGhD,eAACoB,EAAA,EAAKG,KAAN,CAAWzE,UAAU,QAArB,UACE,cAAC0E,EAAA,EAAD,CACEC,KAAK,eACLnE,MAAM,QACNoB,QAAS,kBAAMgD,EAAaxB,EAAKyB,QAEnC,sBAAM5E,MAAO,CAAE6E,aAAc,IAA7B,kBACA,cAACJ,EAAA,EAAD,CACEC,KAAK,OACLnE,MAAM,SACNoB,QAAS,kBAAMmD,EAAS3B,EAAKyB,QAE/B,sBAAM5E,MAAO,CAAE6E,aAAc,IAA7B,kBACA,cAACJ,EAAA,EAAD,CACEC,KAAK,SACLnE,MAAM,MACNoB,QAAS,kBAAMoD,EAAW5B,EAAKyB,QAEjC,sBAAM5E,MAAO,CAAE6E,aAAc,IAA7B,2BAxBK1B,EAAKyB,QA8BpBxB,EAAQc,QAERd,EAAQ,SAGb,IAoIH,gCACE,eAACxC,EAAA,EAAD,CAASyE,UAAQ,EAACC,OAAS,EAA3B,UACE,sBAAKC,UAAU,MAAf,UACE,eAAClF,EAAA,EAAD,CAAQkF,UAAU,SAASjF,GAAG,KAAKC,MAAS,OAA5C,gBACMjB,EADN,OAGA,cAACe,EAAA,EAAD,CAAQkF,UAAU,SAASjF,GAAG,IAAIC,MAAS,OAA3C,oCAOJ,sBAAKgF,UAAU,MAAf,UACE,cAAC7E,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CACEW,KAAK,OACLiD,KAAK,OACLvD,SAvOV,SAA0BC,GACxB8B,EAAQ9B,EAAMC,OAAOC,QAuObA,MAAO2B,EACPlC,OAAK,EACLG,YAAY,kBAIhB,cAACQ,EAAA,EAAD,CAAQnB,MAAM,OAAO+E,OAAS,EAAMD,UAAQ,EAAC1D,QA3DnD,SAAoBP,GAClBmC,IACa,KAATN,GACFrB,IACGC,KACCC,EAAW,mBACX,CAAEmB,QACF,CAAEN,iBAAiB,IAEpBZ,MAAK,SAACmD,GACL3D,QAAQC,IAAI,cACZiC,QAgDF,yBACA,cAAC/B,EAAA,EAAD,CAAQnB,MAAM,MAAM+E,OAAS,EAAMD,UAAQ,EAAC1D,QAAS,WAAM2B,GAAQ,IAAnE,6BACA,cAACkC,EAAA,EAAD,CACEnC,KAAMA,EACNoC,SAAU,WAAOnC,GAAQ,IACzBoC,UAhDR,WACEnC,IACA3B,IACGuD,OACCrD,EAAW,sBACX,CAAEa,iBAAiB,IAEpBZ,MAAK,WACJR,QAAQC,IAAI,qBACZ8B,GAAQ,GACRG,QAuCEkC,QAAW,yCAIf,qBAAKJ,UAAU,MAAf,SACE,cAAClB,EAAA,EAAKuB,MAAN,CAAYC,YAAa,EAAzB,SAA6B1C,MAE/B,8BACE,cAACzB,EAAA,EAAD,CAAQC,QAhPd,WACEC,IAAM4B,IAAI1B,EAAW,eAAgB,CAAEa,iBAAiB,IAAQZ,MAAK,WACnER,QAAQC,IAAI,aACZS,OAAOC,SAASC,KAAO,kBA6OrB,2BCpPO2D,MA1Bf,WACE,OACE,cAAC,IAAD,UACE,8BACE,cAACC,EAAA,EAAD,CAAWhF,OAAK,EAAhB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO+B,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,gBCbCkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcbe3cdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Segment,\n} from \"semantic-ui-react\";\nlet endpoint = \"http://localhost:8080\";\n\nfunction Register() {\n  // set state variables\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidUsername, setInvalidUsername] = useState(false)\n  const [nonBlank, setNonBlank] = useState(false)\n  // Functions\n  function onChangeHandlerUsername(event) {\n    setUsername(event.target.value);\n    if (username !== \"\" ){\n      setNonBlank(true)\n    }\n    console.log(username);\n  }\n\n  function onChangeHandlerPassword(event) {\n    setPassword(event.target.value);\n    if (password !== \"\" ){\n      setNonBlank(true)\n    }\n    console.log(password);\n  }\n\n  function submitReigister(event) {\n    if (username === \"\" || password === \"\"){\n      setInvalidUsername(true)\n      return\n    }\n    console.log(\"Submit Register\");\n    axios\n      .post(endpoint + \"/register\", {\n        username: username,\n        password: password,\n      })\n      .then(\n        function (response) {\n          console.log(response);\n          console.log(\"Successfully Register\");\n          window.location.href = \"/loginformR\";\n        },\n        (error) => {\n          setInvalidUsername(true)\n          console.log(error);\n        }\n      );\n  }\n\n  return (\n    <Router>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image src=\"https://banner2.cleanpng.com/20180425/pxe/kisspng-colored-pencil-clip-art-5ae0902950fb02.3622818715246664093317.jpg\" /> Create your account\n          </Header>\n          <Form size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Create your username here...\"\n                onChange={onChangeHandlerUsername}\n              />\n              <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Create your password here...\"\n                type=\"password\"\n                onChange={onChangeHandlerPassword}\n              />\n              <div>\n                {invalidUsername && (\n                  <p style={{ color: \"red\" }}>{nonBlank ? \"the username already being used\": \"Please fill both username and password\"}</p>\n                )}\n              </div>\n\n              <Button color=\"teal\" fluid size=\"large\" onClick={submitReigister}>\n                Register\n              </Button>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </Router>\n  );\n}\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport Register from \"./Register.js\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nlet endpoint = \"http://127.0.0.1:8080\";\n\nfunction LoginForm() {\n  // set state variables\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const [wrongPassActivated, setWrongPassActivated] = useState(false);\n  // Functions\n  function onChangeHandlerUsername(event) {\n    setUsername(event.target.value);\n    console.log(username);\n  }\n\n  function onChangeHandlerPassword(event) {\n    setPassword(event.target.value);\n    console.log(password);\n  }\n\n  function submitLogin(event) {\n    console.log(\"Submit login\");\n    axios\n      .post(\n        endpoint + \"/auth/signin\",\n        {\n          username: username,\n          password: password,\n        },\n        {\n          withCredentials: true,\n        }\n      )\n      .then(\n        function (response) {\n          setLogin(true);\n          setWrongPassActivated(false);\n          window.location.href = \"/taskR\";\n        },\n        (error) => {\n          setWrongPassActivated(true);\n          console.log(error);\n        }\n      );\n  }\n\n  return (\n    <Router>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image src=\"https://www.pinclipart.com/picdir/middle/4-49680_post-it-clipart-small-cartoon-post-it-note.png\" />{\" \"}\n            Login to see your todo list\n          </Header>\n          <Form size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Userame\"\n                onChange={onChangeHandlerUsername}\n              />\n              <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={onChangeHandlerPassword}\n              />\n              <Link to={login && !wrongPassActivated ? \"/taskR\" : \"/loginform\"}>\n                <Button fluid size=\"small\" onClick={submitLogin}>\n                  <p>Login</p>\n                </Button>\n              </Link>\n            </Segment>\n          </Form>\n          <div>\n            {wrongPassActivated && (\n              <p style={{ color: \"red\" }}>Incorrect Username or password</p>\n            )}\n          </div>\n\n          <Message>\n            Don't have an account yet?{\" \"}\n            <Link\n              to=\"/registerR\"\n              onClick={() => {\n                window.location.href = \"/registerR\";\n              }}\n            >\n              Create account\n            </Link>\n          </Message>\n          <Message size = {\"mini\"} color = {\"teal\"}>\n            \n          <Message size = {\"small\"} color = {\"green\"}>\n              This is a small Todo-app project made with Go, React and MongoDB. Source code of this project is on <a href = \"https://github.com/Generalkhun/go_todo\">Github</a> :)\n          </Message>\n          <Image size = {\"small\"} floated = {\"center\"} src = \"https://blog.mgechev.com/images/revive/revive.png\"/>{\" \"}\n          <Image size = {\"mini\"} src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/220px-React-icon.svg.png\"/>\n          <Image size = {\"mini\"} src = \"https://assets.stickpng.com/thumbs/58481021cef1014c0b5e494b.png\"/>{\" \"}\n         \n                    </Message>\n        </Grid.Column>\n      </Grid>\n      \n      <Switch>\n        <Route path=\"/registerR\">\n          <Register />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Segment,\n  Card,\n  Header,\n  Form,\n  Input,\n  Icon,\n  Button,\n  Confirm\n} from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nlet endpoint = \"http://127.0.0.1:8080\";\n\nfunction Tasks(props) {\n  // state variable\n  const [task, setTask] = useState(\"\");\n  const [item, setItem] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [open,setOpen] = useState(false)\n\n  //initiate tasks from the user\n  GetTask();\n\n  //Handler functions\n  function onChangeHandlers(event) {\n    setTask(event.target.value);\n  }\n\n  //Authen function\n  function RefreshToken() {\n    axios\n      .get(endpoint + \"/auth/refresh\", { withCredentials: true })\n      .then(() => {\n        console.log(\"token refreshed\");\n      });\n  }\n  function logOut() {\n    axios.get(endpoint + \"/auth/logout\", { withCredentials: true }).then(() => {\n      console.log(\"loged out\");\n      window.location.href = \"/loginformR\";\n    });\n  }\n\n  //task functions\n  // gettask: get all task from db\n  function GetTask() {\n    RefreshToken(); //refresh token\n    useEffect(() => {\n      axios\n        .get(endpoint + \"/task/getTasks\", { withCredentials: true })\n        .then((response) => {\n          var responseData = response.data;\n          // set username to display as welcome message\n          setUsername(\n            responseData.slice(\n              responseData.indexOf(\"?\") + 1,\n              responseData.length - 1\n            )\n          );\n          console.log(username);\n          var todoArray = responseData.slice(0, responseData.indexOf(\"?\") - 1);\n\n          todoArray = JSON.parse(todoArray);\n          if (todoArray) {\n            var mappedItem = todoArray.map((item) => {\n              let color = \"yellow\";\n              if (item.status) {\n                color = \"green\";\n              }\n              return (\n                <Card key={item._id} color={color} fluid>\n                  <Card.Content>\n                    <Card.Header textAlign=\"left\">\n                      <div style={{ wordWrap: \"break-word\" }}>{item.task}</div>\n                    </Card.Header>\n\n                    <Card.Meta textAlign=\"right\">\n                      <Icon\n                        name=\"check circle\"\n                        color=\"green\"\n                        onClick={() => completeTask(item._id)}\n                      />\n                      <span style={{ paddingRight: 10 }}>Done</span>\n                      <Icon\n                        name=\"undo\"\n                        color=\"yellow\"\n                        onClick={() => undoTask(item._id)}\n                      />\n                      <span style={{ paddingRight: 10 }}>Undo</span>\n                      <Icon\n                        name=\"delete\"\n                        color=\"red\"\n                        onClick={() => deleteTask(item._id)}\n                      />\n                      <span style={{ paddingRight: 10 }}>Delete</span>\n                    </Card.Meta>\n                  </Card.Content>\n                </Card>\n              );\n            });\n            setItem(mappedItem);\n          } else {\n            setItem([]);\n          }\n        });\n    }, []);\n  }\n\n  function updateTask() {\n    RefreshToken(); //refresh token\n    axios\n      .get(endpoint + \"/task/getTasks\", { withCredentials: true })\n      .then((response) => {\n        var responseData = response.data;\n        // set username to display as welcome message\n\n        setUsername(\n          responseData.slice(\n            responseData.indexOf(\"?\") + 1,\n            responseData.length - 1\n          )\n        );\n        console.log(username);\n        var todoArray = responseData.slice(0, responseData.indexOf(\"?\") - 1);\n\n        todoArray = JSON.parse(todoArray);\n        if (todoArray) {\n          var mappedItem = todoArray.map((item) => {\n            let color = \"yellow\";\n            if (item.status) {\n              color = \"green\";\n            }\n            return (\n              <Card key={item._id} color={color} fluid>\n                <Card.Content>\n                  <Card.Header textAlign=\"left\">\n                    <div style={{ wordWrap: \"break-word\" }}>{item.task}</div>\n                  </Card.Header>\n\n                  <Card.Meta textAlign=\"right\">\n                    <Icon\n                      name=\"check circle\"\n                      color=\"green\"\n                      onClick={() => completeTask(item._id)}\n                    />\n                    <span style={{ paddingRight: 10 }}>Done</span>\n                    <Icon\n                      name=\"undo\"\n                      color=\"yellow\"\n                      onClick={() => undoTask(item._id)}\n                    />\n                    <span style={{ paddingRight: 10 }}>Undo</span>\n                    <Icon\n                      name=\"delete\"\n                      color=\"red\"\n                      onClick={() => deleteTask(item._id)}\n                    />\n                    <span style={{ paddingRight: 10 }}>Delete</span>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            );\n          });\n          setItem(mappedItem);\n        } else {\n          setItem([]);\n        }\n      });\n  }\n\n  function undoTask(id) {\n    RefreshToken(); //refresh token\n    axios\n      .put(endpoint + \"/task/undoTask/\" + id, {}, { withCredentials: true })\n      .then((res) => {\n        console.log(res);\n        updateTask();\n      });\n  }\n\n  function completeTask(id) {\n    RefreshToken(); //refresh token\n    console.log(\"code is here\");\n    axios\n      .put(endpoint + \"/task/completeTask/\" + id, {}, { withCredentials: true })\n      .then((res) => {\n        console.log(\"code is her2\");\n        console.log(res);\n        updateTask();\n      });\n  }\n\n  function deleteTask(id) {\n    RefreshToken(); //refresh token\n    //Becareful, axios.delete has different structure: header is on second argument\n    axios\n      .delete(endpoint + \"/task/deleteTask/\" + id, { withCredentials: true })\n      .then((res) => {\n        console.log(res);\n        updateTask();\n      });\n  }\n\n  function createTask(event) {\n    RefreshToken(); //refresh token\n    if (task !== \"\") {\n      axios\n        .post(\n          endpoint + \"/task/createTask\",\n          { task },\n          { withCredentials: true }\n        )\n        .then((res) => {\n          console.log(\"Task Added\");\n          updateTask();\n        });\n    }\n  }\n\n  function deleteAllTask(){\n    RefreshToken(); //refresh token\n    axios\n      .delete(\n        endpoint + \"/task/deleteAllTask\",\n        { withCredentials: true }\n      )\n      .then(()=>{\n        console.log(\"deleted all tasks\")\n        setOpen(false)\n        updateTask()\n      }\n      )\n    \n  }\n\n  //render\n  return (\n    <div>\n      <Segment inverted basic = {true}>\n        <div className=\"row\">\n          <Header className=\"header\" as=\"h2\" color = {\"teal\"}>\n            Hi {username},\n          </Header>\n          <Header className=\"header\" as=\"p\" color = {\"teal\"}>\n            Create some tasks ?\n          </Header>\n          \n        </div>\n      \n\n      <div className=\"row\">\n        <Form>\n          <Input\n            type=\"text\"\n            name=\"task\"\n            onChange={onChangeHandlers}\n            value={task}\n            fluid\n            placeholder=\"Create Task\"\n          />\n          \n        </Form>\n        <Button color=\"teal\" basic = {true} inverted onClick={createTask}>Create Task</Button>\n        <Button color=\"red\" basic = {true} inverted onClick={()=> {setOpen(true)}}>Delete All Task</Button>\n        <Confirm\n          open={open}\n          onCancel={() => {setOpen(false)}}\n          onConfirm={deleteAllTask}\n          content = {\"Delete All task, are you sure?\"}\n        />\n      </div>\n      </Segment>\n      <div className=\"row\">\n        <Card.Group itemsPerRow={3}>{item}</Card.Group>\n      </div>\n      <div>\n        <Button onClick={logOut}>Log out</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Tasks;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Container } from \"react-bootstrap\";\nimport LoginForm from \"./components/LoginForm\";\nimport Register from \"./components/Register\";\nimport Tasks from \"./components/Tasks\";\nimport { BrowserRouter as Router,Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Container fluid>\n          <Switch>\n            \n            <Route path=\"/loginformR\">\n              <LoginForm />\n            </Route>\n            <Route path=\"/registerR\">\n              <Register />\n            </Route>\n            <Route path=\"/taskR\">\n              <Tasks />\n            </Route>\n            <Route>\n              <LoginForm />\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}